{"version":3,"file":"static/js/596.e83bd946.chunk.js","mappings":"0PACA,EAA0B,kCAA1B,EAAoE,gCAApE,EAA4G,gCAA5G,EAAoJ,gCAApJ,EAA6L,iC,SCK9K,SAASA,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwBC,EAAAA,EAAAA,UAAS,CAAEC,KAAM,GAAIC,MAAO,GAAIC,SAAU,KAAlE,eAAOC,EAAP,KAAaC,EAAb,KAEMC,EAAe,SAAAC,GACnB,MAAwBA,EAAMC,cAAtBP,EAAR,EAAQA,KAAMQ,EAAd,EAAcA,MACdJ,GAAQ,SAAAK,GAAQ,yBAAUA,GAAV,cAAqBT,EAAOQ,QAStCR,EAA0BG,EAA1BH,KAAMC,EAAoBE,EAApBF,MAAOC,EAAaC,EAAbD,SAErB,OACE,iBAAKQ,UAAWC,EAAhB,WACE,eAAID,UAAWC,EAAf,qDACA,kBAAMC,SAXW,SAAAN,GACnBA,EAAMO,iBACNhB,EAASiB,EAAAA,GAAAA,UAAA,UAA6BX,KACtCC,EAAQ,CAAEJ,KAAM,GAAIC,MAAO,GAAIC,SAAU,MAQvC,WACE,mBAAOQ,UAAWC,EAAlB,kBAEE,kBACED,UAAWC,EACXI,KAAK,OACLf,KAAK,OACLgB,QAAQ,yHACRC,MAAM,8DACNC,YAAY,eACZC,UAAQ,EACRX,MAAOR,EACPoB,SAAUf,QAGd,mBAAOK,UAAWC,EAAlB,mBAEE,kBACED,UAAWC,EACXI,KAAK,QACLf,KAAK,QACLgB,QAAQ,mDACRC,MAAM,mBACNC,YAAY,wBACZC,UAAQ,EACRX,MAAOP,EACPmB,SAAUf,QAGd,mBAAOK,UAAWC,EAAlB,sBAEE,kBACED,UAAWC,EACXI,KAAK,WACLf,KAAK,WACLmB,UAAQ,EACRX,MAAON,EACPkB,SAAUf,QAGd,mBAAQU,KAAK,SAASL,UAAWC,EAAjC","sources":["webpack://goit-react-hw-08-phonebook/./src/views/RegistrationView/RegistrationView.module.css?3972","views/RegistrationView/RegisterView.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"section\":\"RegistrationView_section__LEOyD\",\"title\":\"RegistrationView_title__BxqWC\",\"label\":\"RegistrationView_label__uXE+y\",\"input\":\"RegistrationView_input__AQfOz\",\"button\":\"RegistrationView_button__6Q1LV\"};","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { authOperations } from 'redux/auth';\n\nimport styles from './RegistrationView.module.css';\n\nexport default function RegistrationPage() {\n  const dispatch = useDispatch();\n  const [form, setForm] = useState({ name: '', email: '', password: '' });\n\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n    setForm(prevForm => ({ ...prevForm, [name]: value }));\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    dispatch(authOperations.register({ ...form }));\n    setForm({ name: '', email: '', password: '' });\n  };\n\n  const { name, email, password } = form;\n\n  return (\n    <div className={styles.section}>\n      <h2 className={styles.title}>Please enter your registration details</h2>\n      <form onSubmit={handleSubmit}>\n        <label className={styles.label}>\n          Name\n          <input\n            className={styles.input}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces.\"\n            placeholder=\"Example John\"\n            required\n            value={name}\n            onChange={handleChange}\n          />\n        </label>\n        <label className={styles.label}>\n          Email\n          <input\n            className={styles.input}\n            type=\"email\"\n            name=\"email\"\n            pattern=\"([A-z0-9_.-]{1,})@([A-z0-9_.-]{1,}).([A-z]{2,8})\"\n            title=\"Enter your email\"\n            placeholder=\"Example user@mail.com\"\n            required\n            value={email}\n            onChange={handleChange}\n          />\n        </label>\n        <label className={styles.label}>\n          Password\n          <input\n            className={styles.input}\n            type=\"password\"\n            name=\"password\"\n            required\n            value={password}\n            onChange={handleChange}\n          />\n        </label>\n        <button type=\"submit\" className={styles.button}>\n          Register\n        </button>\n      </form>\n    </div>\n  );\n}\n\n// import { useDispatch } from 'react-redux';\n// import { useState } from 'react';\n// import { authOperations } from 'redux/auth';\n\n// const styles = {\n//   form: {\n//     width: 320,\n//   },\n//   label: {\n//     display: 'flex',\n//     flexDirection: 'column',\n//     marginBottom: 15,\n//   },\n// };\n\n// const RegisterView = () => {\n//   const dispatch = useDispatch();\n//   const [name, setName] = useState('');\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n\n//   const handleChange = ({ target: { name, value } }) => {\n//     switch (name) {\n//       case 'name':\n//         return setName(value);\n//       case 'email':\n//         return setEmail(value);\n//       case 'password':\n//         return setPassword(value);\n//       default:\n//         return;\n//     }\n//   };\n\n//   const handleSubmit = e => {\n//     e.preventDefault();\n//     dispatch(authOperations.signUp({ name, email, password }));\n//     setName('');\n//     setEmail('');\n//     setPassword('');\n//   };\n\n//   return (\n//     <div>\n//       <h1>Сторінка Реєстрації</h1>\n\n//       <form onSubmit={handleSubmit} style={styles.form} autoComplete=\"off\">\n//         <label style={styles.label}>\n//           Name\n//           <input\n//             type=\"text\"\n//             name=\"name\"\n//             value={name}\n//             onChange={handleChange}\n//           ></input>\n//         </label>\n\n//         <label style={styles.label}>\n//           Email\n//           <input\n//             type=\"email\"\n//             name=\"email\"\n//             value={email}\n//             onChange={handleChange}\n//           ></input>\n//         </label>\n\n//         <label style={styles.label}>\n//           Password\n//           <input\n//             type=\"password\"\n//             name=\"password\"\n//             value={password}\n//             onChange={handleChange}\n//           ></input>\n//         </label>\n\n//         <button type=\"submit\">Зареєструватись</button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default RegisterView;\n"],"names":["RegistrationPage","dispatch","useDispatch","useState","name","email","password","form","setForm","handleChange","event","currentTarget","value","prevForm","className","styles","onSubmit","preventDefault","authOperations","type","pattern","title","placeholder","required","onChange"],"sourceRoot":""}